{
  "language": "Solidity",
  "sources": {
    "Contracts/FiatTokenAdmin.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ncontract FiatTokenAdmin {\r\n    address private owner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function call(address addr, bytes calldata data) public {\r\n        require(msg.sender == owner, \"not owner\");\r\n\r\n        (bool sent, ) = payable(addr).call{value: 0}(data);\r\n        require(sent, \"call failed\");\r\n    }\r\n\r\n}\r\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "": [
          "ast"
        ],
        "*": [
          "abi",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.legacyAssembly",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "evm.gasEstimates",
          "evm.assembly"
        ]
      }
    }
  }
}