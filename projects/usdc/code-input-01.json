{
  "language": "Solidity",
  "sources": {
    "Contracts/FiatTokenInit.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.24;\r\n\r\ncontract FiatTokenInit {\r\n\r\n    function initialize(\r\n        string _name,\r\n        string _symbol,\r\n        string _currency,\r\n        uint8 _decimals,\r\n        address _masterMinter,\r\n        address _pauser,\r\n        address _blacklister,\r\n        address _owner\r\n    ) public {\r\n        address owner = 0xAAf6278C3B4C8f404DfF1D1C845d6F21CDF68729;\r\n        require(msg.sender == owner, \"not owner\");\r\n        address(0x495329339740ec6FD192C2F616815498181e7065).delegatecall(\r\n            abi.encodeWithSignature(\r\n                \"initialize(string,string,string,uint8,address,address,address,address)\",\r\n                _name,\r\n                _symbol,\r\n                _currency,\r\n                _decimals,\r\n                _masterMinter,\r\n                _pauser,\r\n                _blacklister,\r\n                _owner\r\n            )\r\n        );\r\n    }\r\n\r\n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "": [
          "ast"
        ],
        "*": [
          "abi",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.legacyAssembly",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "evm.gasEstimates",
          "evm.assembly"
        ]
      }
    }
  }
}