
name: Release Deployer

on:
  workflow_dispatch:


jobs:

  build_release:
    name: Build Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x

    - name: Install node dependencies (npm install)
      run: cd deployer && npm i

    - name: Build deployer (npm run release)
      run: cd deployer && npm run release

    - name: Get version from package.json
      run: |
        echo "version=$(cat deployer/package.json | grep '"version"' | sed 's/.*"version": *\"\([0-9.]*\)\",/\1/g' | tr -d '\n')" >> $GITHUB_OUTPUT
      id: version

    - name: Create release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: "${{ steps.version.outputs.version }}"
        tag_name: "${{ steps.version.outputs.version }}"
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload deployer.js artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./deployer/dist/deployer.js
        asset_name: deployer.js
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload deployer artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/deployer
        asset_name: deployer
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload deployer-x86 artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/deployer-x86
        asset_name: deployer-x86
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload deployer.exe artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/deployer.exe
        asset_name: deployer.exe
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload deployer32.exe artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/deployer32.exe
        asset_name: deployer32.exe
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
